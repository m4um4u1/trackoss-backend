# Server Configuration
server.port=8080

# Application Name (using artifactId)
spring.application.name=trackoss-backend

# Spring Boot Logging
logging.level.org.springframework.web=debug

# Show SQL statements for debugging (optional, but good for development)
spring.jpa.show-sql=true

# Hibernate ddl-auto (update will update the schema if needed, create-drop is good for testing)
# Using 'update' as it's generally safer for development than 'create-drop'
spring.jpa.hibernate.ddl-auto=update

# PostgreSQL Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/trackossdb
spring.datasource.username=trackoss_user
spring.datasource.password=trackoss_password
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection pool settings
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000

# PostGIS spatial dialect for geographic data support
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# OpenAPI/Swagger Configuration
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha
springdoc.swagger-ui.tryItOutEnabled=true

# CORS Configuration - Only origins are configurable via environment variables
# Comma-separated list of allowed origin patterns (e.g. "http://localhost:4200,https://yourdomain.com")
app.cors.allowed-origins=http://localhost:4200

# Actuator Configuration
# Enable health check endpoint for monitoring
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.defaults.enabled=true
management.endpoint.health.probes.enabled=true

# JWT Configuration
# You should change this secret in production and make it base64 encoded
app.jwt.secret=<KEY>
app.jwt.expiration=86400000
